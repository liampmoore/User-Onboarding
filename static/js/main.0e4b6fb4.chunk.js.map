{"version":3,"sources":["components/form.js","components/usercard.js","components/userlist.js","App.js","index.js"],"names":["FormikUserForm","withFormik","mapPropsToValues","name","email","password","tos","validationSchema","Yup","shape","required","min","handleSubmit","values","toolkit","axios","post","then","res","console","log","data","props","setUsers","users","catch","err","errors","touched","isValid","isSubmitting","className","type","placeholder","checked","href","disabled","UserCard","user","UserList","map","key","id","App","useState","style","marginLeft","ReactDOM","render","document","getElementById"],"mappings":"iUAiEeA,EAjCQC,YAAW,CAC9BC,iBAD8B,YAE1B,MAAO,CACHC,KAFuC,EAA7BA,MAEI,GACdC,MAHuC,EAAvBA,OAGA,GAChBC,SAJuC,EAAhBA,UAID,GACtBC,IALuC,EAANA,MAKrB,IAGpBC,iBAAkBC,MAAaC,MAAM,CACjCN,KAAMK,MACDE,SAAS,qBACdN,MAAOI,MACFJ,MAAM,qBACNM,SAAS,sBACdL,SAAUG,MACLG,IAAI,EAAG,2CACPD,SAAS,2BAGhBE,aApB4B,SAoBfC,EAAQC,GACjBC,IAAMC,KAAK,8BAA+BH,GACvCI,MAAK,SAAAC,GACFC,QAAQC,IAAIF,EAAIG,MAChBP,EAAQQ,MAAMC,SAAd,sBAA2BT,EAAQQ,MAAME,OAAzC,CAAgDN,EAAIG,WAEvDI,OAAM,SAAAC,GACHP,QAAQC,IAAIM,QA3BLzB,EA3BN,SAAC,GAAwD,IAAtDY,EAAqD,EAArDA,OAAQc,EAA6C,EAA7CA,OAAQC,EAAqC,EAArCA,QAAuBC,GAAc,EAA5BC,aAA4B,EAAdD,SACvD,OACQ,kBAAC,IAAD,CAAME,UAAU,QACZ,8CACA,6BACI,kBAAC,IAAD,CAAOC,KAAK,OAAO7B,KAAK,OAAO8B,YAAY,SAC1CL,EAAQzB,MAAQwB,EAAOxB,KAAO,oCAAG,IAAI,0BAAM4B,UAAU,SAASJ,EAAOxB,OAAiByB,EAAQzB,MAAQ,oCAAG,IAAI,0BAAM4B,UAAU,aAAhB,iBAElH,6BACI,kBAAC,IAAD,CAAOC,KAAK,OAAO7B,KAAK,QAAQ8B,YAAY,UAC3CL,EAAQxB,OAASuB,EAAOvB,MAAQ,oCAAG,IAAI,0BAAM2B,UAAU,SAASJ,EAAOvB,QAAkBwB,EAAQxB,OAAS,oCAAG,IAAI,0BAAM2B,UAAU,aAAhB,WAEtH,6BACI,kBAAC,IAAD,CAAOC,KAAK,WAAW7B,KAAK,WAAW8B,YAAY,aAClDL,EAAQvB,UAAYsB,EAAOtB,SAAW,oCAAG,IAAI,0BAAM0B,UAAU,SAASJ,EAAOtB,WAAqBuB,EAAQvB,UAAY,oCAAG,IAAI,0BAAM0B,UAAU,aAAhB,YAElI,6BACI,6BACA,kBAAC,IAAD,CAAOC,KAAK,WAAW7B,KAAK,MAAM+B,QAASrB,EAAOP,MAChDO,EAAOP,IAA0E,oCAAG,IAAI,0BAAMyB,UAAU,aAAhB,YAA3E,oCAAG,IAAI,uBAAGI,KAAK,OAAOJ,UAAU,WAAzB,uBAE1B,6BACA,4BAAQC,KAAK,SAASI,UAAWvB,EAAOP,MAAQuB,GAAhD,c,MCxBD,SAASQ,EAAT,GAA2B,IAARC,EAAO,EAAPA,KAC9B,OACI,yBAAKP,UAAU,QACf,4BAAKO,EAAKnC,MACV,2BAAG,uBAAGgC,KAAI,iBAAYG,EAAKlC,QAAUkC,EAAKlC,SCJnC,SAASmC,EAAT,GAA4B,IAATf,EAAQ,EAARA,MAC9B,OACI,oCACCA,EAAMgB,KAAI,SAACF,GACR,OACI,kBAACD,EAAD,CAAUC,KAAMA,EAAMG,IAAKH,EAAKI,S,MCWjCC,MAXf,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNpB,EADM,KACCD,EADD,KAEb,OACE,yBAAKQ,UAAU,aACf,wBAAIc,MAAO,CAACC,WAAY,SAAxB,YACA,kBAAC,EAAD,CAAMtB,MAAOA,EAAOD,SAAUA,IAC9B,kBAACgB,EAAD,CAAUf,MAAOA,MCRrBuB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.0e4b6fb4.chunk.js","sourcesContent":["import React from 'react';\nimport {withFormik, Form, Field } from 'formik';\nimport * as Yup from 'yup';\nimport axios from 'axios';\n\nconst UserForm = ({ values, errors, touched, isSubmitting, isValid }) => {\n    return (\n            <Form className='card'>\n                <h2>Add new users:</h2>\n                <div>\n                    <Field type='text' name='name' placeholder='name'/>\n                    {touched.name && errors.name ? <>{' '}<span className='error'>{errors.name}</span></>: touched.name && <>{' '}<span className='confirmed'>Looks good.</span></>}\n                </div>\n                <div>\n                    <Field type='text' name='email' placeholder='email'/>\n                    {touched.email && errors.email ? <>{' '}<span className='error'>{errors.email}</span></>: touched.email && <>{' '}<span className='confirmed'>Nice.</span></>}\n                </div>\n                <div>\n                    <Field type='password' name='password' placeholder='password'/>\n                    {touched.password && errors.password ? <>{' '}<span className='error'>{errors.password}</span></>: touched.password && <>{' '}<span className='confirmed'>Check.</span></>}\n                </div>\n                <div>\n                    <br/>\n                    <Field type='checkbox' name='tos' checked={values.tos}/>\n                    {!values.tos ? <>{' '}<a href='#tos' className='warning'>Terms of service.</a></> :<>{' '}<span className='confirmed'>Agreed.</span></>}\n                </div>\n                <br/>\n                <button type='submit' disabled={!values.tos || !isValid}>Submit</button>\n            </Form>\n    );\n}\n\nconst FormikUserForm = withFormik({\n    mapPropsToValues({name, email, password, tos}) {\n        return {\n            name: name || '',\n            email: email || '',\n            password: password || '',\n            tos: tos || false\n        }\n    }, \n    validationSchema: Yup.object().shape({\n        name: Yup.string()\n            .required('Name is required.'),\n        email: Yup.string()\n            .email(\"Email is invalid.\")\n            .required('Email is required.'),\n        password: Yup.string()\n            .min(6, \"Password needs at least six characters.\")\n            .required('Password is required.')\n\n      }),\n      handleSubmit(values, toolkit) {\n          axios.post('https://reqres.in/api/users', values)\n            .then(res => {\n                console.log(res.data);\n                toolkit.props.setUsers([...toolkit.props.users, res.data]);\n            })\n            .catch(err => {\n                console.log(err)\n            })\n      }\n})(UserForm);\n\n\nexport default FormikUserForm;","import React from 'react';\nimport './card.css';\n\nexport default function UserCard({user}) {\n    return (\n        <div className='card'>\n        <h3>{user.name}</h3>\n        <p><a href={`mailto:${user.email}`}>{user.email}</a></p>\n        </div>\n    )\n}","import React from 'react';\nimport UserCard from './usercard';\n\nexport default function UserList({users}) {\n    return (\n        <>\n        {users.map((user) => {\n            return (\n                <UserCard user={user} key={user.id}/>\n            )\n        })}\n        </>\n    )\n}","import React, {useState}  from 'react';\nimport Form from './components/form';\nimport UserList from './components/userlist';\n\nimport './components/container.css';\n\n\n\nfunction App() {\n  const [users, setUsers] = useState([]);\n  return (\n    <div className='container'>\n    <h1 style={{marginLeft: '15px'}}>Userlist</h1>\n    <Form users={users} setUsers={setUsers}></Form>\n    <UserList users={users}></UserList>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}